apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: maven-pipeline
spec:
  workspaces:
    - name: shared-workspace
    - name: maven-settings
    - name: maven-m2
    - name: sonarqube-auth
      optional: true
  params:
  - name: APPLICATION_NAME
    type: string
    default: ""
  - name: GIT_URL
    type: string
    default: ""
  - name: GIT_REVISION
    type: string
    default: "main"
  - name: GIT_REF
    type: string
    default: "refs/heads/main"
  - name: GIT_SHORT_REVISION
    type: string
    default: ""
  - name: GIT_BRANCH
    type: string
    default: ""
  - name: HELM_CHART_VERSION
    type: string
    default: ""
  - name: MAVEN_BUILD_OPTS
    description: maven build options
    type: array
    default: []
  - name: TEAM_NAME
    type: string
  - name: APP_OF_APPS_DEV_KEY
    type: string
    default: ""
  - name: APP_OF_APPS_TEST_KEY
    type: string
    default: ""
  - name: APP_OF_APPS_STAGE_KEY
    type: string
    default: ""
  tasks:
    - name: fetch-app-repository
      taskRef:
        name: git-clone
        kind: Task
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: "$(params.GIT_URL)"
        - name: revision
          value: "main"
        - name: subdirectory
          value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)"
        - name: deleteExisting
          value: "true"
        - name: sslVerify
          value: "false"


    # Code Analysis

    # Save Test Results

    # Code Analysis Check

    # Kube-linter

    - name: maven
      taskRef:
        name: maven
      runAfter:
         - fetch-app-repository
      params:
        - name: WORK_DIRECTORY
          value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)"
        - name: GOALS
          value: "package"
        - name: MAVEN_BUILD_OPTS
          value: "-Dquarkus.package.type=fast-jar -DskipTests"
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: maven-m2
          workspace: maven-m2
        - name: output
          workspace: shared-workspace
        - name: sonarqube-auth
          workspace: sonarqube-auth

    - name: bake
      taskRef:
        name: bake
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: APPLICATION_NAME
          value: "$(params.APPLICATION_NAME)"
        - name: TEAM_NAME
          value: "$(params.TEAM_NAME)"
        - name: VERSION
          value: "$(tasks.maven.results.VERSION)"
        - name: WORK_DIRECTORY
          value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)"
      runAfter: 
        - maven

    # Image Scan

    - name: helm-package
      taskRef:
        name: helm-package
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: APPLICATION_NAME
          value: "$(params.APPLICATION_NAME)"
        - name: VERSION
          value: "$(tasks.maven.results.VERSION)"
        - name: WORK_DIRECTORY
          value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)"
      runAfter:
        - bake

    - name: fetch-argocd-configuration
      taskRef:
        name: git-clone
        kind: Task
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: "https://{{ .Values.git_server }}/{{ .Values.team }}/tech-exercise.git"
        - name: revision
          value: "main"
        - name: subdirectory
          value: "tech-exercise/main"
        - name: deleteExisting
          value: "true"
        - name: sslVerify
          value: "false"
      runAfter:
        - helm-package

    - name: deploy-test
      taskRef:
        name: deploy
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: APPLICATION_NAME
          value: "$(params.APPLICATION_NAME)"
        - name: WORK_DIRECTORY
          value: "tech-exercise/main/pet-battle/"
        - name: DEPLOY_ENVIRONMENT
          value: "test"
        - name: TEAM_NAME
          value: "$(params.TEAM_NAME)"
        - name: VERSION
          value: "$(tasks.maven.results.VERSION)"
        - name: CHART_VERSION
          value: "$(tasks.helm-package.results.CHART_VERSION)"
      runAfter: 
        - fetch-argocd-configuration

    - name: verify-deployment
      taskRef:
        name: verify-deployment
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: WORK_DIRECTORY
          value: "tech-exercise/main/pet-battle/"
        - name: PREVIOUS_VERSION
          value: "$(tasks.deploy-test.results.PREVIOUS_VERSION)"
        - name: PREVIOUS_CHART_VERSION
          value: "$(tasks.deploy-test.results.PREVIOUS_CHART_VERSION)"
        - name: TEAM_NAME
          value: "$(params.TEAM_NAME)"
        - name: VERSION
          value: "$(tasks.maven.results.VERSION)"
        - name: APPLICATION_NAME
          value: "$(params.APPLICATION_NAME)"
        - name: DEPLOY_ENVIRONMENT
          value: "test"
      runAfter:
        - deploy-test
     
    # Cosign Image Sign

    # Generate and Attest SBOM

    # Pen Testing

    # Load Testing

  results:
    - name: VERSION
      description: Version of the application
      value: "$(tasks.maven.results.VERSION)"
    - name: CHART_VERSION
      description: Version of the helm chart
      value: "$(tasks.helm-package.results.CHART_VERSION)"
    - name: PREVIOUS_CHART_VERSION
      description: Version of currently applied chart
      value: "$(tasks.deploy-test.results.PREVIOUS_CHART_VERSION)"
    - name: PREVIOUS_VERSION
      description: Version of currently running app
      value: "$(tasks.deploy-test.results.PREVIOUS_VERSION)"
